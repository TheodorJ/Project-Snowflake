package proj.snowflake.src;

public class Ticker implements Runnable {
	
	Main main;
	
	public long lastTick;
	
	public Ticker(Main m) {
		main = m;
	}
	
	public void tick() {
		long yolo1 = System.currentTimeMillis() - lastTick;
        if(main.rightHeld) {
        	for(int i = 0; i < main.chunks.size(); i++) {
        		main.chunks.get(i).x -= (main.movementSpeed * yolo1);
        		main.chunks2.get(i).x -= (main.movementSpeed * yolo1);
        	}
        }
        if(main.leftHeld) {
        	for(int i = 0; i < main.chunks.size(); i++) {
        		main.chunks.get(i).x += (main.movementSpeed * yolo1);
        		main.chunks2.get(i).x += (main.movementSpeed * yolo1);
        	}
        }
        if(main.upHeld) {
        	for(int i = 0; i < main.chunks.size(); i++) {
        		main.chunks.get(i).y += (main.movementSpeed * yolo1);
        		main.chunks2.get(i).y += (main.movementSpeed * yolo1);
        	}
        }
        if(main.downHeld) {
        	for(int i = 0; i < main.chunks.size(); i++) {
        		main.chunks.get(i).y -= (main.movementSpeed * yolo1);
        		main.chunks2.get(i).y -= (main.movementSpeed * yolo1);
        	}
        }
        if(main.zoomingIn) {
        	if(main.HEIGHTSCALE < main.MAXZOOM)
        		main.HEIGHTSCALE += 0.02;
        }
        if(main.zoomingOut) {
        	if(main.HEIGHTSCALE > main.MINZOOM)
        		main.HEIGHTSCALE -= 0.02;
        }
        lastTick = System.currentTimeMillis();
    }
	
	public void run() {
		while(true) {
			tick();
			try {
				Thread.sleep(0);
        	} catch (Exception e) {
        	}
		}
	}
}
